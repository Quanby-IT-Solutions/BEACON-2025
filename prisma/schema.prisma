// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

//=================================
// ENUM
//=================================
// ENUM

enum UserType {
  SEAFARER
  CORPORATE_PROFESSIONAL
  STUDENTS
  OTHERS
  SUPERADMIN
}

enum Sex {
  MALE
  FEMALE
  OTHER
}

enum ActiveStatus {
  ACTIVE
  INACTIVE
  PENDING
  VISITOR
}

// BEACON 2025 Registration Enums
enum Gender {
  MALE
  FEMALE
  PREFER_NOT_TO_SAY
  OTHERS
}

enum AgeBracket {
  UNDER_18
  AGE_18_24
  AGE_25_34
  AGE_35_44
  AGE_45_54
  AGE_55_ABOVE
}

enum Industry {
  MARITIME
  GOVERNMENT
  TOURISM_HOSPITALITY
  SHIPBUILDING_REPAIR
  NGO_DEVELOPMENT
  MEDIA_PRESS
  OTHERS
}

enum AttendeeType {
  TRADE_VISITOR
  GOVERNMENT_OFFICIAL
  STUDENT_ACADEMIC
  MEDIA_PRESS
  EXHIBITOR
  SPEAKER_PANELIST
  VIP_GUEST
}

enum InterestArea {
  MARITIME_NAVAL_TECH
  SHIPBUILDING_REPAIR
  SHIPPING_MANNING
  GREEN_SUSTAINABLE
  MARINE_TOURISM
  INNOVATION_DIGITAL
  MARITIME_EDUCATION
  BLUE_ECONOMY
  LUXURY_BOATS_YACHTS
}

enum HearAboutEvent {
  FACEBOOK_SOCIAL_MEDIA
  WEBSITE
  EMAIL_INVITATION
  REFERRED_BY_FRIEND
  PARTICIPATED_LAST_YEAR
  OTHER
}

// Additional Conference-specific Enums
enum MaritimeLeagueMembership {
  YES
  NO
}

enum PaymentMode {
  BANK_DEPOSIT_TRANSFER
  GCASH
  FREE
}

enum PaymentStatus {
  PENDING
  CONFIRMED
  FAILED
  REFUNDED
}

enum ConferenceInterestArea {
  SHIPBUILDING_SHIP_REPAIR
  BOATBUILDING_YACHT_BUILDING
  MARINE_TECHNOLOGY
  NAVAL_DEFENSE_SECURITY
  MARITIME_TOURISM
  INNOVATION_SUSTAINABILITY
  BLUE_ECONOMY
  LIFESTYLE_FASHION
  WOMEN_YOUTH_IN_MARITIME
  OTHERS
}

enum EventStatusEnum {
  CONFERENCE
  SHOW
  WORKSHOP
  SEMINAR
  EXHIBITION
}

enum ManagerStatus {
  SUPERADMIN
  ADMIN
}

//=================================
// MODELS
//=================================
model ManagerAccount {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  username  String        @unique
  password  String // Store hashed password
  status    ManagerStatus
  isActive  Boolean       @default(true)

  @@map("manager_accounts")
}

model Users {
  id            String          @id @default(cuid())
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  user_accounts user_accounts[]
  user_details  user_details[]
  Visitors      Visitors[]
  Conferences   Conference[]

  CodeDistribution       CodeDistribution[]
  ExhibitorRegistrations exhibitor_registrations[]

  @@map("users")
}

model user_accounts {
  id             String       @id @default(uuid())
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt
  status         ActiveStatus @default(PENDING)
  userId         String
  user           Users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  // Section 2: Account Details
  email          String       @unique
  mobileNumber   String
  mailingAddress String?
  landline       String?

  @@map("user_accounts")
}

model user_details {
  id             String     @id @default(uuid())
  userId         String
  user           Users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  // Section 1: Personal Information
  firstName      String
  lastName       String
  middleName     String?
  suffix         String?
  preferredName  String?
  faceScannedUrl String?
  gender         Gender // there will be others input field genderOthers
  genderOthers   String?
  ageBracket     AgeBracket
  nationality    String

  @@map("user_details")
}

// BEACON 2025 Registration Models
model Visitors {
  id             String   @id @default(uuid())
  userId         String?
  // Section 3: Professional Information
  jobTitle       String
  companyName    String
  industry       Industry // there will be others input field industryOthers
  industryOthers String?
  companyAddress String?
  companyWebsite String?
  businessEmail  String?

  // Section 4: Interests & Preferences
  attendingDays        String[]
  eventParts           String[] // This is a EXPO, CONFERENCE, PHILIPPINE IN-WATER SHIP & BOAT SHOW, BLUE RUNWAY, NETWORKING & AWARDS NIGHT
  attendeeType         AttendeeType
  interestAreas        InterestArea[]
  receiveUpdates       Boolean        @default(false)
  inviteToFutureEvents Boolean        @default(false)

  // Section 5: Accessibility & Safety
  specialAssistance      String?
  emergencyContactPerson String
  emergencyContactNumber String

  // Section 6: Consent
  dataPrivacyConsent Boolean
  hearAboutEvent     HearAboutEvent // there will be others input field hearAboutOthers
  hearAboutOthers    String?

  // System fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user Users? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("visitors")
}

// BEACON 2025 Conference-specific Registration Model

model Conference {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Section 1: Maritime League Membership
  isMaritimeLeagueMember MaritimeLeagueMembership
  tmlMemberCode          String?

  // Section 3: Professional Information
  jobTitle       String?
  companyName    String?
  industry       String?
  companyAddress String?
  companyWebsite String?

  // Section 4: Areas of Interest
  interestAreas       ConferenceInterestArea[]
  otherInterests      String?
  receiveEventInvites Boolean                  @default(false)

  // Section 6: Consent & Confirmation
  emailCertificate Boolean @default(false)
  dataUsageConsent Boolean // Required field

  // Relations
  user              Users               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ConferencePayment ConferencePayment?
  summaryOfPayments SummaryOfPayments[] // One-to-many with selected events

  @@map("conferences")
}

// Conference Payment Model - ONLY for Conference registrations
model ConferencePayment {
  id           String   @id @default(uuid())
  conferenceId String   @unique // One payment per conference registration
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Payment Details - Conference Specific
  totalAmount     Decimal
  referenceNumber String?
  receiptImageUrl String?
  notes           String?
  paymentMode     PaymentMode   @default(BANK_DEPOSIT_TRANSFER)
  paymentStatus   PaymentStatus @default(PENDING)

  // Relations - ONLY linked to Conference
  conference Conference @relation(fields: [conferenceId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("conference_payments")
}

model SummaryOfPayments {
  id           String          @id @default(uuid())
  eventName    String
  eventDate    DateTime
  eventPrice   Decimal
  eventStatus  EventStatusEnum
  conferenceId String
  eventId      String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt

  // Relations
  conference Conference @relation(fields: [conferenceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  event      Events     @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // Prevent duplicate event selections for same conference
  @@unique([conferenceId, eventId])
  @@map("summary_of_payments")
}

model Events {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  eventName      String
  eventDate      DateTime
  eventPrice     Decimal
  eventStatus    EventStatusEnum
  isActive       Boolean         @default(true)
  description    String?
  eventStartTime DateTime?
  eventEndTime   DateTime?

  // Relations
  summaryOfPayments SummaryOfPayments[]

  @@map("events")
}

model VisitorEvents {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  eventName      String
  eventDateStart DateTime
  eventDateEnd   DateTime
  eventStartTime DateTime?
  eventEndTime   DateTime?
  eventStatus    EventStatusEnum
  isActive       Boolean         @default(true)
  description    String?

  @@map("visitor_events")
}

model CodeDistribution {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  code      String   @unique
  isActive  Boolean  @default(false)
  userId    String? // User ID who used the code

  // Relations
  user Users? @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("code_distribution")
}

model exhibitor_registrations {
  id         String   @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // ðŸ‘‡ Foreign key relation to Users
  userId String
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // ðŸ”· SECTION 1: Company Information
  companyName              String
  businessRegistrationName String?
  industrySector           IndustrySector
  industrySectorOthers     String?
  companyAddress           String?
  companyWebsite           String?
  companyProfile           String?
  //Section 2 is the user_details
  //section 3 is the user_accounts

  // ðŸ”· SECTION 4: Exhibition Package & Preferences
  participationTypes ParticipationType[]
  boothSize          BoothSize?
  boothDescription   String
  launchNewProduct   YesNoMaybe?
  requireDemoArea    YesNoMaybe?

  // ðŸ”· SECTION 5: Logistics & Marketing Coordination
  bringLargeEquipment      YesNoMaybe?
  haveMarketingCollaterals String? //Yes have collaterals, No, need assistance, working on it
  logoUrl                  String?

  // ðŸ”· SECTION 7: Company Objectives & Collaboration
  goals              GoalType[]
  goalsOthers        String?
  exploreSponsorship YesNoMaybe?

  // ðŸ”· SECTION 7: Confirmation & Next Steps
  confirmIntent      ConfirmIntent
  letterOfIntentUrl  String?
  additionalComments String?

  @@map("exhibitor_registrations")
}

// ðŸ”· ENUMS
enum IndustrySector {
  SHIPBUILDING_BOATBUILDING
  MARITIME_EQUIPMENT_TECHNOLOGY
  NAVAL_DEFENSE
  PORT_LOGISTICS
  MARINE_TOURISM
  RENEWABLE_GREEN
  FASHION_LIFESTYLE
  EDUCATION_TRAINING
  OTHERS
}

enum ParticipationType {
  INDOOR_BOOTH
  RAW_SPACE
  IN_WATER_DISPLAY
  BLUE_RUNWAY
  PRODUCT_LAUNCH
  CO_BRANDING
}

enum BoothSize {
  SIZE_2X2
  SIZE_2X3
  SIZE_3X3
  SIZE_6X3
  RAW_SPACE_MIN_18
  CUSTOM_SETUP
}

enum YesNoMaybe {
  YES
  NO
  MAYBE
}

enum GoalType {
  SHOWCASE_PRODUCTS
  MEET_BUYERS
  PROMOTE_BRAND
  LAUNCH_NEW_PRODUCT
  ENGAGE_GOV_AGENCIES
  JOIN_BLUE_ECONOMY
  RECRUIT_TALENT
  OTHERS
}

enum ConfirmIntent {
  YES_RESERVE
  TENTATIVE
  NO_EXPLORING
}
